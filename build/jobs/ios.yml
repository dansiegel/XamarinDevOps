parameters:
  solution: '**/*.sln'
  appcenterKey: ''
  artifactName: 'iOS'
  buildConfiguration: 'Release'
  isStoreRelease: false
  iOSCertificateFile: ''
  iOSCertificatePassword: ''
  iOSProvisioningProfile: ''

steps:
- powershell: |
    if($env:IsStoreRelease -eq $true) {
      Write-Host "Setting Build Configuration to Store"
      Write-Output ("##vso[task.setvariable variable=BuildConfiguration;]Store")
    }
  displayName: Set Build Configuration
  env:
    IsStoreRelease: ${{ parameters.isStoreRelease }}

- task: InstallAppleCertificate@2
  displayName: 'Install an Apple certificate'
  inputs:
    certSecureFile: ${{ parameters.iOSCertificateFile }}
    certPwd: ${{ parameters.iOSCertificatePassword }}

- task: InstallAppleProvisioningProfile@1
  displayName: 'Install an Apple provisioning profile'
  inputs:
    provProfileSecureFile: ${{ parameters.iOSProvisioningProfile }}

- task: vs-publisher-473885.motz-mobile-buildtasks.ios-bundle-version.ios-bundle-version@0
  displayName: 'Bump iOS Versions in Info.plist'
  inputs:
    sourcePath: src/DemoDevOps.iOS/Info.plist
    versionName: '1.0.$(Build.BuildId)'

- template: ../steps/sdks.yml

- template: ../steps/nuget.yml
  parameters:
    solution: ${{ parameters.solution }}

- task: XamariniOS@2
  displayName: 'Build Xamarin.iOS solution **/*.iOS.csproj'
  inputs:
    solutionFile: '**/*.iOS.csproj'
    configuration: ${{ parameters.buildConfiguration }}
  env:
    Secret_AppCenterSecret: ${{ parameters.appcenterKey }}
    Secret_SampleString: $(SampleString)

- task: PublishPipelineArtifact@0
  displayName: 'Publish Package Artifacts'
  inputs:
    targetPath: 'src/DemoDevOps.iOS/bin/iPhone/${{ parameters.buildConfiguration }}'
    artifactName: ${{ parameters.artifactName }}
  condition: and(succeeded(), eq(variables['system.pullrequest.isfork'], false))